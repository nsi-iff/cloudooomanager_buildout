[buildout]
extends = 
  components/python-2.6.cfg
  components/gnuplot.cfg
  components/opencv.cfg

extensions = buildout-versions

parts =
  python2.6
  gnuplot
  opencv
  create-directories
  instance-recipe-egg
  cloudooomanager_tac
  cloudooomanager_ctl
  cloudooomanager_ctl_execute
  celery_config
  start_worker
  stop_worker
  stop_all_workers


versions = versions

find-links =
  http://newton.iff.edu.br/pypi/

log-directory = ${buildout:directory}/log
etc-directory = ${buildout:directory}/etc
run-directory = ${buildout:directory}/run

[create-directories]
recipe = plone.recipe.command
command =
  mkdir -p ${buildout:etc-directory}
  mkdir -p ${buildout:run-directory}
  mkdir -p ${buildout:log-directory}
update-command = ${:command}

[versions]
argparse = 1.2.1
Twisted = 12.0.0
cyclone = 1.0-rc3
celery = 2.3.4
restfulie = 0.9.2
should_dsl = 2.0a4
webunit = 1.3.10
docutils = 0.8.1
setuptools = 0.6c11
funkload = 1.16.1
PIL = 1.1.6
zope.interface = 3.8.0

[instance-recipe-egg]
recipe = zc.recipe.egg
python = python2.6
interpreter = python
eggs = 
  argparse
  restfulie
  celery
  should_dsl
  zope.interface
  webunit
  docutils
  setuptools
  funkload
  PIL
  nsi.granulate
  nsi.cloudooomanager
  Twisted
  cyclone
extra-paths = 
  ${opencv:location}
  ${gnuplot:location}
entry-points = 
  celeryd=celery.bin.celeryd:main
  celeryd_multi=celery.bin.celeryd_multi:main
  twistd=twisted.scripts.twistd:run
scripts = 
  celeryd
  celeryd-multi=celeryd_multi
  twistd
initialization = 
  import os
  os.environ['CELERY_CONFIG_MODULE'] = '${celery_config:output}'


[cloudooomanager_tac]
recipe = z3c.recipe.template
input = ${buildout:directory}/templates/cloudooomanager.tac.in
output = ${buildout:etc-directory}/cloudooomanager.tac
host = 0.0.0.0
port = 8886
conf-path = ${buildout:directory}/buildout.cfg
db-file = ${buildout:etc-directory}/storage.sqlite

[cloudooomanager_ctl]
recipe = z3c.recipe.template
input = ${buildout:directory}/templates/cloudooomanager_ctl.in
output = ${buildout:bin-directory}/cloudooomanager_ctl
tac-path = ${cloudooomanager_tac:output}
os.environ['CELERY_CONFIG_MODULE'] = 'mypackage.celeryconfig'
[cloudooomanager_ctl_execute]
recipe = plone.recipe.command
command =
  chmod +xr ${cloudooomanager_ctl:output}
update-command = ${:command}

[add_user]
recipe = zc.recipe.egg
python = python2.6
eggs = ${instance-recipe-egg:eggs}
entry-points = add_user = nsi.cloudooomanager.auth:add_user
scripts = add_user
inicialize = auth = Authentication(${cloudooomanager_tac:db-file})

[del_user]
recipe = zc.recipe.egg
python = python2.6
eggs = ${instance-recipe-egg:eggs}
entry-points = del_user = nsi.cloudooomanager.auth:del_user
scripts = del_user
inicialize = auth = Authentication(${cloudooomanager_tac:db-file})

[start_worker]
recipe = zc.recipe.egg
python = python2.6
eggs = ${instance-recipe-egg:eggs}
entry-points = 
  start_worker=subprocess:call
scripts = 
  start_worker
initialization = 
  import os
  from argparse import ArgumentParser
  parser = ArgumentParser(description='Start Celery workers.')
  parser.add_argument('-name', dest='name', required=True, type=str,
                      help='A name for the worker.')
  name = parser.parse_args().name
  call_args = ("%s/celeryd --pidfile=%s --logfile=%s -Q cloudooo &" % \
  ("${buildout:bin-directory}", os.path.join("${buildout:run-directory}",name+'.pid'),\
  os.path.join("${buildout:log-directory}",name+'.log')))
arguments = call_args

[stop_worker]
recipe = zc.recipe.egg
python = python2.6
eggs = ${instance-recipe-egg:eggs}
entry-points = 
  stop_worker=subprocess:call
scripts = 
  stop_worker
initialization = 
  import os
  from argparse import ArgumentParser
  parser = ArgumentParser(description='Start Celery workers.')
  parser.add_argument('-name', dest='name', required=True, type=str,\
                      help='The name of the worker that will be stopped.')
  name = parser.parse_args().name
  kill_pid = ("kill %s" % open(os.path.join("${buildout:run-directory}",name+'.pid')).read())
arguments = kill_pid

[stop_all_workers]
recipe = zc.recipe.egg
python = python2.6
eggs = ${instance-recipe-egg:eggs}
entry-points = 
  stop_all_workers=celery.task.control:broadcast
scripts = 
  stop_all_workers
arguments = "shutdown"

[celery_config]
recipe = z3c.recipe.template
input = ${buildout:directory}/templates/celeryconfig.in
output = ${buildout:etc-directory}/celeryconfig.py
python=${python2.6:location}
user = test
password = test
host = localhost
port = 5672
vhost = myvhost
tasks = nsi.cloudooomanager.tasks
convert_task = Granulaute
callback_task = Callback


[cloudooo]
url = http://gauss.iff.edu.br:8011

[sam]
url = http://200.143.198.46:8888/
user = test
pass = test
